##
# Copyright 2017 Sam Wen.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

AWSTemplateFormatVersion: 2010-09-09

Description: >-
  Create resources into default VPC, including default security group, code deploy role, 
  instance role, instance profile, s3 bucket and exported parameters.

Parameters:

  EMail:
    Default: ''
    Type: String
    Description: EMail address for notification if there are any operation events, if you have NotificationTopic, you can skip it.
    ConstraintDescription: must be a valid email address.

  NotificationTopic:
    Default: ''
    Type: String
    Description: 'Optional, SNS Notification Topic, enter an existing one.'

  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: VpcId of an existing VPC
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.

  Subnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: Two existing subnets associated with two different availability zones.
    ConstraintDescription: >-
      must be a list of two existing subnets associated with two different 
      availability zones. They should be residing in the selected VPC.

  S3Bucket:
    Default: ''
    Type: String
    Description: 'Optional, S3 Bucket, enter an existing one'

  InstanceRole:
    Default: ''
    Type: String
    Description: 'Optional, Instance Role, enter an existing one.'

  InstanceProfile:
    Default: ''
    Type: String
    Description: 'Optional, Instance Profile, enter an existing one.'

  DefaultSecurityGroup:
    Default: ''
    Type: String
    Description: 'Optional, Default Security Group Id, enter an existing one.'

  SSHLocation:
    Default: 0.0.0.0/0
    Type: String
    Description: The IP address range that can be used to SSH to the EC2 instances
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  KeyName:
    Default: dskey
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  CodeDeployRoleArn:
    Default: ''
    Type: String
    Description: 'Optional, CodeDeploy Role Arn, enter an existing one.'

  CodeDeployAppName:
    Default: ''
    Type: String
    Description: 'Optional, CodeDeploy Application Name, enter an existing one.'

Conditions:

  CreateS3Bucket: !Equals 
    - !Ref S3Bucket
    - ''

  CreateInstanceRole: !Equals 
    - !Ref InstanceRole
    - ''

  CreateInstanceProfile: !Or 
    - !Equals 
      - !Ref InstanceProfile
      - ''
    - !Equals 
      - !Ref InstanceRole
      - ''

  CreateDefaultSecurityGroup: !Equals 
    - !Ref DefaultSecurityGroup
    - ''

  CreateCodeDeployRole: !Equals 
    - !Ref CodeDeployRoleArn
    - ''

  CreateCodeDeployAppName: !Equals 
    - !Ref CodeDeployAppName
    - ''

  CreateNotificationTopic: !Equals 
    - !Ref NotificationTopic
    - ''

Mappings:

  ELBPrincipals:
    us-east-1:
      Id: '127311923021'
    us-east-2:
      Id: 033677994240
    us-west-1:
      Id: 027434742980
    us-west-2:
      Id: '797873946194'
    ca-central-1:
      Id: '985666609251'
    eu-west-1:
      Id: '156460612806'
    eu-west-2:
      Id: '652711504416'
    eu-central-1:
      Id: 054676820928
    ap-northeast-1:
      Id: '582318560864'
    ap-northeast-2:
      Id: '600734575887'
    ap-southeast-1:
      Id: '114774131450'
    ap-southeast-2:
      Id: '783225319266'
    sa-east-1:
      Id: '507241528517'
    us-gov-west-1:
      Id: 048591011584
    cn-north-1:
      Id: '638102146993'

Resources:

  NewS3Bucket:
    Condition: CreateS3Bucket
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketName: !Join 
        - ''
        - - dataservice-
          - !Ref 'AWS::Region'
          - '-'
          - !Ref 'AWS::AccountId'
      Tags:
        - Key: Name
          Value: Dataservice
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: GlacierRule
            Prefix: /AWSLogs/
            Status: Enabled
            ExpirationInDays: '365'
            Transition:
              TransitionInDays: '14'
              StorageClass: Glacier

  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !If 
        - CreateS3Bucket
        - !Ref NewS3Bucket
        - !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:PutObject'
            Effect: Allow
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !If 
                  - CreateS3Bucket
                  - !Ref NewS3Bucket
                  - !Ref S3Bucket
                - /AWSLogs/
                - !Ref 'AWS::AccountId'
                - /*
            Principal:
              AWS:
                - !FindInMap 
                  - ELBPrincipals
                  - !Ref 'AWS::Region'
                  - Id

  NewInstanceRole:
    Condition: CreateInstanceRole
    Type: 'AWS::IAM::Role'
    DeletionPolicy: Retain
    Properties:
      RoleName: Dataservice-EC2-Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: InstanceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Deny
                Action:
                  - 's3:DeleteBucket'
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:aws:s3:::'
                      - !If 
                        - CreateS3Bucket
                        - !Ref NewS3Bucket
                        - !Ref S3Bucket
              - Effect: Allow
                Action:
                  - 's3:ListBucket'
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:aws:s3:::'
                      - !If 
                        - CreateS3Bucket
                        - !Ref NewS3Bucket
                        - !Ref S3Bucket
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                  - 's3:ListObjects'
                  - 's3:ListBucketVersions'
                  - 's3:GetObjectVersion'
                  - 's3:GetObject'
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:aws:s3:::'
                      - !If 
                        - CreateS3Bucket
                        - !Ref NewS3Bucket
                        - !Ref S3Bucket
                      - /*
              - Effect: Allow
                Action: 
                  - 's3:Get*'
                  - 's3:List*'
                Resource: 
                  - 'arn:aws:s3:::aws-codedeploy-us-east-2/*'
                  - 'arn:aws:s3:::aws-codedeploy-us-east-1/*'
                  - 'arn:aws:s3:::aws-codedeploy-us-west-1/*'
                  - 'arn:aws:s3:::aws-codedeploy-us-west-2/*'
                  - 'arn:aws:s3:::aws-codedeploy-ca-central-1/*'
                  - 'arn:aws:s3:::aws-codedeploy-eu-west-1/*'
                  - 'arn:aws:s3:::aws-codedeploy-eu-west-2/*'
                  - 'arn:aws:s3:::aws-codedeploy-eu-central-1/*'
                  - 'arn:aws:s3:::aws-codedeploy-ap-northeast-1/*'
                  - 'arn:aws:s3:::aws-codedeploy-ap-northeast-2/*'
                  - 'arn:aws:s3:::aws-codedeploy-ap-southeast-1/*'
                  - 'arn:aws:s3:::aws-codedeploy-ap-southeast-2/*'
                  - 'arn:aws:s3:::aws-codedeploy-ap-south-1/*'
                  - 'arn:aws:s3:::aws-codedeploy-sa-east-1/*'
              - Effect: Allow
                Action: 
                  - 'autoscaling:Describe*'
                  - 'cloudformation:Describe*'
                  - 'cloudformation:GetTemplate'
                Resource: 
                  - '*'

  NewInstanceProfile:
    Condition: CreateInstanceProfile
    Type: 'AWS::IAM::InstanceProfile'
    DeletionPolicy: Retain
    Properties:
      InstanceProfileName: Dataservice-EC2-Profile
      Path: /
      Roles:
        - !If 
          - CreateInstanceRole
          - !Ref NewInstanceRole
          - !Ref InstanceRole

  NewDefaultSecurityGroup:
    Condition: CreateDefaultSecurityGroup
    Type: 'AWS::EC2::SecurityGroup'
    DeletionPolicy: Retain
    Properties:
      GroupName: Dataservice Default
      GroupDescription: >-
        Default Security group that all data service related instances will launch into.
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: Dataservice Default
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation

  NewDefaultSecurityGroupIngress:
    Condition: CreateDefaultSecurityGroup
    Type: 'AWS::EC2::SecurityGroupIngress'
    DeletionPolicy: Retain
    Properties:
      GroupId: !Ref NewDefaultSecurityGroup
      IpProtocol: '-1'
      FromPort: '0'
      ToPort: '65535'
      SourceSecurityGroupId: !Ref NewDefaultSecurityGroup
    DependsOn: NewDefaultSecurityGroup

  NewCodeDeployRole:
    Condition: CreateCodeDeployRole
    Type: 'AWS::IAM::Role'
    DeletionPolicy: Retain
    Properties: 
      RoleName: Dataservice-CodeDeploy-Role
      AssumeRolePolicyDocument: 
        Version: 2008-10-17
        Statement: 
          - Effect: Allow
            Principal: 
              Service:
                - 'codedeploy.amazonaws.com'
            Action:
                - 'sts:AssumeRole'
      Path: /
      Policies: 
        - PolicyName: CodeDeployPolicy
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action:
                  - 'ec2:Describe*'
                  - 'sns:Publish'
                  - 'CloudWatch:DescribeAlarms'
                  - 'Tag:getResources'
                  - 'Tag:getTags'
                  - 'Tag:getTagsForResource'
                  - 'Tag:getTagsForResourceList'
                  - 'autoscaling:Describe*'
                  - 'autoscaling:EnterStandby'
                  - 'autoscaling:ExitStandby'
                  - 'autoscaling:CompleteLifecycleAction'
                  - 'autoscaling:DeleteLifecycleHook'
                  - 'autoscaling:PutLifecycleHook'
                  - 'autoscaling:UpdateAutoScalingGroup'
                  - 'autoscaling:RecordLifecycleActionHeartbeat'
                  - 'elasticloadbalancing:Describe*'
                  - 'elasticloadbalancing:DeregisterTargets'
                  - 'elasticloadbalancing:RegisterTargets'
                Resource:
                  - '*'

  NewCodeDeployAppName:
    Condition: CreateCodeDeployAppName
    Type: "AWS::CodeDeploy::Application"
    DeletionPolicy: Retain
    Properties:
      ApplicationName: Dataservice-CD

  NewNotificationTopic:
    Condition: CreateNotificationTopic
    Type: 'AWS::SNS::Topic'
    DeletionPolicy: Retain
    Properties:
      DisplayName: Dataservice
      TopicName: Dataservice
      Subscription:
        - Endpoint: !Ref EMail
          Protocol: email
Outputs:

  VpcId:
    Description: VpcId of an existing VPC.
    Value: !Ref VpcId
    Export:
      Name: !Sub '${AWS::StackName}-VpcId'

  Subnets:
    Description: Two existing subnets associated with two different availability zones.
    Value: !Join 
      - ', '
      - !Ref Subnets
    Export:
      Name: !Sub '${AWS::StackName}-Subnets'

  Subnet1:
    Description: The first subnet of the two subnets.
    Value: !Select 
      - '0'
      - !Ref Subnets
    Export:
      Name: !Sub '${AWS::StackName}-Subnet1'

  Subnet2:
    Description: The second subnet of the two subnets.
    Value: !Select 
      - '1'
      - !Ref Subnets
    Export:
      Name: !Sub '${AWS::StackName}-Subnet2'

  InstanceRole:
    Description: Instance role for accessing resources.
    Value: !If 
      - CreateInstanceRole
      - !Ref NewInstanceRole
      - !Ref InstanceRole
    Export:
      Name: !Sub '${AWS::StackName}-InstanceRole'

  InstanceProfile:
    Description: Instance profile for accessing resources.
    Value: !If 
      - CreateInstanceProfile
      - !Ref NewInstanceProfile
      - !Ref InstanceProfile
    Export:
      Name: !Sub '${AWS::StackName}-InstanceProfile'

  S3Bucket:
    Description: bucket for installation sources and system use.
    Value: !If 
      - CreateS3Bucket
      - !Ref NewS3Bucket
      - !Ref S3Bucket
    Export:
      Name: !Sub '${AWS::StackName}-S3Bucket'

  DefaultSecurityGroup:
    Description: Default Security Group
    Value: !If 
      - CreateDefaultSecurityGroup
      - !Ref NewDefaultSecurityGroup
      - !Ref DefaultSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-DefaultSecurityGroup'

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Value: !Ref SSHLocation
    Export:
      Name: !Sub '${AWS::StackName}-SSHLocation'

  KeyName:
    Description: ssh Key Name
    Value: !Ref KeyName
    Export:
      Name: !Sub '${AWS::StackName}-KeyName'

  CodeDeployRoleArn:
    Description: Code deploy role Arn for code deploy resource access.
    Value: !If 
      - CreateCodeDeployRole
      - !GetAtt 
        - NewCodeDeployRole
        - Arn
      - !Ref CodeDeployRoleArn
    Export:
      Name: !Sub '${AWS::StackName}-CodeDeployRoleArn'

  CodeDeployAppName:
    Description: CodeDeploy Application Name
    Value: !If 
      - CreateCodeDeployAppName
      - !Ref NewCodeDeployAppName
      - !Ref CodeDeployAppName
    Export:
      Name: !Sub '${AWS::StackName}-CodeDeployAppName'

  NotificationTopic:
    Description: SNS Notification Topic
    Value: !If 
      - CreateNotificationTopic
      - !Ref NewNotificationTopic
      - !Ref NotificationTopic
    Export:
      Name: !Sub '${AWS::StackName}-NotificationTopic'
    